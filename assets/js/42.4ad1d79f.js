(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{263:function(t,v,_){"use strict";_.r(v);var e=_(29),a=Object(e.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"加密-解密"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#加密-解密"}},[t._v("#")]),t._v(" 加密 & 解密")]),t._v(" "),_("h3",{attrs:{id:"对称加密"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#对称加密"}},[t._v("#")]),t._v(" 对称加密")]),t._v(" "),_("p",[t._v("概念: 加密密钥和解密密钥是同一个;")]),t._v(" "),_("p",[t._v("优点:")]),t._v(" "),_("p",[t._v("1.加密效率高")]),t._v(" "),_("p",[t._v("缺点:")]),t._v(" "),_("p",[t._v("1.秘钥不适合在网上传")]),t._v(" "),_("p",[t._v("2.秘钥的维护量很大")]),t._v(" "),_("ol",{attrs:{start:"3"}},[_("li",[t._v("秘钥不适合在网上传输")])]),t._v(" "),_("p",[t._v("加密标准: DES\n加密过程: 将明文每64位分成一组,然后对每段明文使用64位的密码加密, 然后连接起来即得加密后的密文(使用的密码实际只有56位, 有8位用于奇偶校验,56位破解只要3.5-21分钟 128位需要5.4 * 10的18次方年)")]),t._v(" "),_("h3",{attrs:{id:"非对称加密"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#非对称加密"}},[t._v("#")]),t._v(" 非对称加密")]),t._v(" "),_("p",[t._v("概念: 加密密钥和解密密钥是一对;公钥加密, 私钥解密;私钥加密, 公钥解密;")]),t._v(" "),_("p",[t._v("非对称加密的用处:数字签名\n数字签名的作用是保证文件没有被修改, 一但修改签名就失效了")]),t._v(" "),_("p",[t._v("签名流程: 文件根据单向散列函数生成128位的文件摘要 ---\x3e A 用自己的私钥加密摘要,加密后的东西就叫数字签名 --\x3e 然后将源文件, 数字签名, A的公钥 发送给B ---\x3e B 拿到文件 通过公开的单向散列函数 生成文件摘要, 用A的公钥解密摘要, 对比是否一致, 如果一致则发过来的源文件则没有被修改 (A的秘钥对是自己生成的, 不可靠)")]),t._v(" "),_("p",[t._v("CA机构存在的必要性")]),t._v(" "),_("p",[t._v("合法的签名流程是:\nA 公司/企业向CA机构提出申请 ---\x3e CA机构审核申请公司提交的资料的合法性, 真实性, 用CA机构自己的秘钥对中的公钥加密准备给A的一对秘钥(带有CA机构的签名) ---\x3e A 公司/企业 用CA机构给的公钥解密出 一对秘钥, 然后重复上面的流程 --\x3e  B 公司收到A公司的文件(A的公钥(带有CA签名), A的数字签名, 源文件) --\x3e B用CA的公钥向CA机构验证A发过来的公钥(先查询是否失效) --\x3e 然后再用A的公钥机密摘要 --\x3e 比较自己算的摘要和解密后的只要是不是一样的")]),t._v(" "),_("p",[t._v("A公司的秘钥对丢了可以向CA机构申请吊销, CA机构在网站上公布已失效证书列表")])])}),[],!1,null,null,null);v.default=a.exports}}]);