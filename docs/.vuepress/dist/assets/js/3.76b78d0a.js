(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{246:function(t,s,a){t.exports=a.p+"assets/img/tcpConnect.77cf2e77.jpg"},247:function(t,s,a){t.exports=a.p+"assets/img/TCPstate.ef031736.jpg"},248:function(t,s,a){t.exports=a.p+"assets/img/TCPdisconnect.4a0cf4d1.jpg"},283:function(t,s,a){"use strict";a.r(s);var e=a(28),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"tcp的连接和释放"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tcp的连接和释放"}},[t._v("#")]),t._v(" TCP的连接和释放")]),t._v(" "),e("p",[e("img",{attrs:{src:a(246),alt:"TCP三次握手"}})]),t._v(" "),e("p",[t._v("syn: 是否是同步包")]),t._v(" "),e("p",[t._v("ack: 确认号;")]),t._v(" "),e("p",[t._v("seq: 序列号")]),t._v(" "),e("h4",{attrs:{id:"问-tcp为什么要三次握手"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#问-tcp为什么要三次握手"}},[t._v("#")]),t._v(" 问: tcp为什么要三次握手?")]),t._v(" "),e("p",[t._v("答:假设第一次握手的数据包选择了一条较远的链路, 等了一段时间发现A计算机发现没有收到确认, 隔了一段时间又发送了一个数据包,而这次很快就收到了确认, B计算机在此时又收到了第一次发送的确认包, 这次又给了一个A计算机的确认包, 由于A计算机已经收到了一次确认数据包, 所以就不会再次确认B计算机发送的确认包, 由于A计算机一直不确认第二次发送的数据包, 所以B计算机就会一直等待, 导致B计算机的连接浪费, 浪费多了就瘫痪了")]),t._v(" "),e("p",[e("img",{attrs:{src:a(247),alt:"TCP状态"}})]),t._v(" "),e("p",[t._v("tcp四次挥手\n"),e("img",{attrs:{src:a(248),alt:"TCP断开"}})]),t._v(" "),e("h4",{attrs:{id:"问-为什么要等待2msl-时间"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#问-为什么要等待2msl-时间"}},[t._v("#")]),t._v(" 问: 为什么要等待2MSL 时间?")]),t._v(" "),e("p",[t._v("答: 因为在服务器发送关闭通知的时候, 如果发送失败, 在发送一次的时候客户端立即关闭了的话就再也不能给服务端确定了, 然后连接就处于抑制不能关闭的状态")])])}),[],!1,null,null,null);s.default=r.exports}}]);